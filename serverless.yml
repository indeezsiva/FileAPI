# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: cheerfulfly
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: file-system-api
service: file-api-service

provider:
  name: aws
  runtime: nodejs18.x
  region: us-west-2
  stage: dev
  httpApi:
    authorizers:
      cognitoAuthorizer:
        identitySource: $request.header.Authorization
        issuerUrl: https://cognito-idp.${self:provider.region}.amazonaws.com/${env:COGNITO_USER_POOL_ID}
        audience:
          - ${env:COGNITO_APP_CLIENT_ID}
  environment:
    REGION: ${env:REGION}
    ACCESS_KEY_ID: ${env:ACCESS_KEY_ID}
    SECRET_ACCESS_KEY: ${env:SECRET_ACCESS_KEY}
    DYNAMODB_TABLE: ${env:DYNAMODB_TABLE}
    DYNAMODB_TABLE_USERS: ${env:DYNAMODB_TABLE_USERS}
    DYNAMODB_TABLE_USERS_FOLLOWS: ${env:DYNAMODB_TABLE_USERS_FOLLOWS}
    DYNAMODB_TABLE_POSTS: ${env:DYNAMODB_TABLE_POSTS}
    DYNAMODB_TABLE_COMMENTS: ${env:DYNAMODB_TABLE_COMMENTS}
    DYNAMODB_TABLE_REACTIONS: ${env:DYNAMODB_TABLE_REACTIONS}
    DYNAMODB_TABLE_CRASH_LOGS: ${env:DYNAMODB_TABLE_CRASH_LOGS}
    APP_ENV: ${env:APP_ENV}
    AWS_BUCKET_NAME: ${env:AWS_BUCKET_NAME}
    ENCRYPTION_KEY: ${env:ENCRYPTION_KEY}
    COGNITO_USER_POOL_ID: ${env:COGNITO_USER_POOL_ID}
    COGNITO_APP_CLIENT_ID: ${env:COGNITO_APP_CLIENT_ID}


functions:
  app:
    handler: handler.handler
    events:
      - httpApi:
          path: /{proxy+}
          method: ANY
          authorizer:
            name: cognitoAuthorizer

  # Public route (no auth) â€” do NOT add "authorizer" here
  createUser:
    handler: handler.handler
    events:
      - httpApi:
          path: /user/create
          method: POST

# Define the Cognito Authorizer for HTTP API
resources:
  Resources:
    HttpApi:
      Type: AWS::ApiGatewayV2::Api
      Properties:
        Name: ${self:service}-${self:provider.stage}
        ProtocolType: HTTP

    CognitoAuthorizer:
      Type: AWS::ApiGatewayV2::Authorizer
      Properties:
        ApiId:
          Ref: HttpApi
        AuthorizerType: JWT
        IdentitySource:
          - "$request.header.Authorization"
        Name: cognitoAuthorizer
        JwtConfiguration:
          Audience:
            - ${env:COGNITO_APP_CLIENT_ID}
          Issuer: https://cognito-idp.${self:provider.region}.amazonaws.com/${env:COGNITO_USER_POOL_ID}

plugins:
  - serverless-offline

package:
  exclude:
    - .gitignore
    - README.md
    - .env
